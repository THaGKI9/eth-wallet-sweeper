{"version":3,"file":"static/chunks/5822.e9a254857faaf2dc.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/communication/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/communication/messageFormatter.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/communication/methods.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/communication/utils.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/eth/constants.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/eth/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/safe/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/safe/signatures.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/sdk.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/txs/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/types/gateway.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/types/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/types/messaging.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/types/rpc.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/types/sdk.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/dist/src/utils.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/logger/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/logger/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/bytes/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/bytes/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/bignumber/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/properties/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/properties/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/keccak256/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/rlp/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/rlp/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/address/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/address/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/strings/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/strings/lib.esm/utf8.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/hash/lib.esm/id.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/address.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/array.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/null.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/constants/lib.esm/bignumbers.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/number.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/string.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/fragments.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/abi-coder.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abi/lib.esm/interface.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abstract-provider/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abstract-provider/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abstract-signer/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/abstract-signer/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/signing-key/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/signing-key/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/transactions/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/transactions/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/contracts/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/contracts/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/hash/lib.esm/message.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/hash/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/hash/lib.esm/typed-data.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/basex/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/sha2/lib.esm/types.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/sha2/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/sha2/lib.esm/sha2.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/wordlists/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/hdnode/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/hdnode/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/random/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/random/lib.esm/random.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/json-wallets/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/json-wallets/lib.esm/utils.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/json-wallets/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/wallet/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/wallet/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/constants/lib.esm/addresses.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/constants/lib.esm/hashes.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/constants/lib.esm/strings.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/networks/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/networks/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/strings/lib.esm/idna.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/hash/lib.esm/namehash.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/base64/lib.esm/base64.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/web/lib.esm/geturl.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/web/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/web/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/formatter.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/base-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/ws.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/websocket-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/ankr-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/random/lib.esm/shuffle.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/fallback-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/ipc-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/infura-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/pocket-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/web3-provider.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/providers/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/solidity/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/solidity/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/strings/lib.esm/bytes32.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/units/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/units/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/ethers/lib.esm/_version.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/ethers/lib.esm/ethers.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-apps-sdk/node_modules/ethers/lib.esm/index.js","webpack://_N_E/./node_modules/@gnosis.pm/safe-react-gateway-sdk/dist/index.min.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst messageFormatter_1 = require(\"./messageFormatter\");\nclass PostMessageCommunicator {\n    constructor(allowedOrigins = null, debugMode = false) {\n        this.allowedOrigins = null;\n        this.callbacks = new Map();\n        this.debugMode = false;\n        this.isValidMessage = ({ origin, data, source }) => {\n            const emptyOrMalformed = !data;\n            const sentFromParentEl = source === window.parent;\n            const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n            const allowedSDKVersion = majorVersionNumber >= 1;\n            let validOrigin = true;\n            if (Array.isArray(this.allowedOrigins)) {\n                validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\n            }\n            return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n        };\n        this.logIncomingMessage = (msg) => {\n            console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n        };\n        this.onParentMessage = (msg) => {\n            if (this.isValidMessage(msg)) {\n                this.debugMode && this.logIncomingMessage(msg);\n                this.handleIncomingMessage(msg.data);\n            }\n        };\n        this.handleIncomingMessage = (payload) => {\n            const { id } = payload;\n            const cb = this.callbacks.get(id);\n            if (cb) {\n                cb(payload);\n                this.callbacks.delete(id);\n            }\n        };\n        this.send = (method, params) => {\n            const request = messageFormatter_1.MessageFormatter.makeRequest(method, params);\n            if (typeof window === 'undefined') {\n                throw new Error(\"Window doesn't exist\");\n            }\n            window.parent.postMessage(request, '*');\n            return new Promise((resolve, reject) => {\n                this.callbacks.set(request.id, (response) => {\n                    if (!response.success) {\n                        reject(new Error(response.error));\n                        return;\n                    }\n                    resolve(response);\n                });\n            });\n        };\n        this.allowedOrigins = allowedOrigins;\n        this.debugMode = debugMode;\n        window.addEventListener('message', this.onParentMessage);\n    }\n}\nexports.default = PostMessageCommunicator;\n__exportStar(require(\"./methods\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageFormatter = void 0;\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"./utils\");\nclass MessageFormatter {\n}\nexports.MessageFormatter = MessageFormatter;\nMessageFormatter.makeRequest = (method, params) => {\n    const id = (0, utils_2.generateRequestId)();\n    return {\n        id,\n        method,\n        params,\n        env: {\n            sdkVersion: (0, utils_1.getSDKVersion)(),\n        },\n    };\n};\nMessageFormatter.makeResponse = (id, data, version) => ({\n    id,\n    success: true,\n    version,\n    data,\n});\nMessageFormatter.makeErrorResponse = (id, error, version) => ({\n    id,\n    success: false,\n    error,\n    version,\n});\n//# sourceMappingURL=messageFormatter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Methods = void 0;\nvar Methods;\n(function (Methods) {\n    Methods[\"sendTransactions\"] = \"sendTransactions\";\n    Methods[\"rpcCall\"] = \"rpcCall\";\n    Methods[\"getChainInfo\"] = \"getChainInfo\";\n    Methods[\"getSafeInfo\"] = \"getSafeInfo\";\n    Methods[\"getTxBySafeTxHash\"] = \"getTxBySafeTxHash\";\n    Methods[\"getSafeBalances\"] = \"getSafeBalances\";\n    Methods[\"signMessage\"] = \"signMessage\";\n})(Methods = exports.Methods || (exports.Methods = {}));\n//# sourceMappingURL=methods.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateRequestId = void 0;\n// i.e. 0-255 -> '00'-'ff'\nconst dec2hex = (dec) => dec.toString(16).padStart(2, '0');\nconst generateId = (len) => {\n    const arr = new Uint8Array((len || 40) / 2);\n    window.crypto.getRandomValues(arr);\n    return Array.from(arr, dec2hex).join('');\n};\nconst generateRequestId = () => {\n    if (typeof window !== 'undefined') {\n        return generateId(10);\n    }\n    return new Date().getTime().toString(36);\n};\nexports.generateRequestId = generateRequestId;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RPC_CALLS = void 0;\nexports.RPC_CALLS = {\n    eth_call: 'eth_call',\n    eth_gasPrice: 'eth_gasPrice',\n    eth_getLogs: 'eth_getLogs',\n    eth_getBalance: 'eth_getBalance',\n    eth_getCode: 'eth_getCode',\n    eth_getBlockByHash: 'eth_getBlockByHash',\n    eth_getBlockByNumber: 'eth_getBlockByNumber',\n    eth_getStorageAt: 'eth_getStorageAt',\n    eth_getTransactionByHash: 'eth_getTransactionByHash',\n    eth_getTransactionReceipt: 'eth_getTransactionReceipt',\n    eth_getTransactionCount: 'eth_getTransactionCount',\n    eth_estimateGas: 'eth_estimateGas',\n};\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eth = void 0;\nconst constants_1 = require(\"../eth/constants\");\nconst methods_1 = require(\"../communication/methods\");\nconst inputFormatters = {\n    defaultBlockParam: (arg = 'latest') => arg,\n    returnFullTxObjectParam: (arg = false) => arg,\n    blockNumberToHex: (arg) => Number.isInteger(arg) ? `0x${arg.toString(16)}` : arg,\n};\nclass Eth {\n    constructor(communicator) {\n        this.communicator = communicator;\n        this.call = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_call,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getBalance = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_getBalance,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getCode = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_getCode,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getStorageAt = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_getStorageAt,\n            formatters: [null, inputFormatters.blockNumberToHex, inputFormatters.defaultBlockParam],\n        });\n        this.getPastLogs = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_getLogs,\n        });\n        this.getBlockByHash = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_getBlockByHash,\n            formatters: [null, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getBlockByNumber = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_getBlockByNumber,\n            formatters: [inputFormatters.blockNumberToHex, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getTransactionByHash = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_getTransactionByHash,\n        });\n        this.getTransactionReceipt = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_getTransactionReceipt,\n        });\n        this.getTransactionCount = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_getTransactionCount,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getGasPrice = this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_gasPrice,\n        });\n        this.getEstimateGas = (transaction) => this.buildRequest({\n            call: constants_1.RPC_CALLS.eth_estimateGas,\n        })([transaction]);\n    }\n    buildRequest(args) {\n        const { call, formatters } = args;\n        return async (params) => {\n            if (formatters && Array.isArray(params)) {\n                formatters.forEach((formatter, i) => {\n                    if (formatter) {\n                        params[i] = formatter(params[i]);\n                    }\n                });\n            }\n            const payload = {\n                call,\n                params: params || [],\n            };\n            const response = await this.communicator.send(methods_1.Methods.rpcCall, payload);\n            return response.data;\n        };\n    }\n}\nexports.Eth = Eth;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSDKVersion = void 0;\nconst sdk_1 = __importDefault(require(\"./sdk\"));\nexports.default = sdk_1.default;\n__exportStar(require(\"./sdk\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./communication/methods\"), exports);\n__exportStar(require(\"./communication/messageFormatter\"), exports);\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"getSDKVersion\", { enumerable: true, get: function () { return utils_1.getSDKVersion; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Safe = void 0;\nconst ethers_1 = require(\"ethers\");\nconst signatures_1 = require(\"./signatures\");\nconst methods_1 = require(\"../communication/methods\");\nconst constants_1 = require(\"../eth/constants\");\nclass Safe {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getChainInfo() {\n        const response = await this.communicator.send(methods_1.Methods.getChainInfo, undefined);\n        return response.data;\n    }\n    async getInfo() {\n        const response = await this.communicator.send(methods_1.Methods.getSafeInfo, undefined);\n        return response.data;\n    }\n    // There is a possibility that this method will change because we may add pagination to the endpoint\n    async experimental_getBalances({ currency = 'usd' } = {}) {\n        const response = await this.communicator.send(methods_1.Methods.getSafeBalances, {\n            currency,\n        });\n        return response.data;\n    }\n    async check1271Signature(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const encodedIsValidSignatureCall = signatures_1.EIP_1271_INTERFACE.encodeFunctionData('isValidSignature', [\n            messageHash,\n            signature,\n        ]);\n        const payload = {\n            call: constants_1.RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(methods_1.Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === signatures_1.MAGIC_VALUE;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    async check1271SignatureBytes(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const msgBytes = ethers_1.ethers.utils.arrayify(messageHash);\n        const encodedIsValidSignatureCall = signatures_1.EIP_1271_BYTES_INTERFACE.encodeFunctionData('isValidSignature', [\n            msgBytes,\n            signature,\n        ]);\n        const payload = {\n            call: constants_1.RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(methods_1.Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === signatures_1.MAGIC_VALUE_BYTES;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    calculateMessageHash(message) {\n        return ethers_1.ethers.utils.hashMessage(message);\n    }\n    async isMessageSigned(message, signature = '0x') {\n        const messageHash = this.calculateMessageHash(message);\n        const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n        return messageHashSigned;\n    }\n    async isMessageHashSigned(messageHash, signature = '0x') {\n        const checks = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];\n        for (const check of checks) {\n            const isValid = await check(messageHash, signature);\n            if (isValid) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nexports.Safe = Safe;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAGIC_VALUE_BYTES = exports.MAGIC_VALUE = exports.EIP_1271_BYTES_INTERFACE = exports.EIP_1271_INTERFACE = void 0;\nconst ethers_1 = require(\"ethers\");\nconst MAGIC_VALUE = '0x1626ba7e';\nexports.MAGIC_VALUE = MAGIC_VALUE;\nconst MAGIC_VALUE_BYTES = '0x20c13b0b';\nexports.MAGIC_VALUE_BYTES = MAGIC_VALUE_BYTES;\nconst EIP_1271_INTERFACE = new ethers_1.ethers.utils.Interface([\n    'function isValidSignature(bytes32 _dataHash, bytes calldata _signature) external view',\n]);\nexports.EIP_1271_INTERFACE = EIP_1271_INTERFACE;\nconst EIP_1271_BYTES_INTERFACE = new ethers_1.ethers.utils.Interface([\n    'function isValidSignature(bytes calldata _data, bytes calldata _signature) public view',\n]);\nexports.EIP_1271_BYTES_INTERFACE = EIP_1271_BYTES_INTERFACE;\n//# sourceMappingURL=signatures.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst communication_1 = __importDefault(require(\"./communication\"));\nconst txs_1 = require(\"./txs\");\nconst eth_1 = require(\"./eth\");\nconst safe_1 = require(\"./safe\");\nclass SafeAppsSDK {\n    constructor(opts = {}) {\n        const { whitelistedDomains = null, debug = false } = opts;\n        this.communicator = new communication_1.default(whitelistedDomains, debug);\n        this.eth = new eth_1.Eth(this.communicator);\n        this.txs = new txs_1.TXs(this.communicator);\n        this.safe = new safe_1.Safe(this.communicator);\n    }\n}\nexports.default = SafeAppsSDK;\n//# sourceMappingURL=sdk.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TXs = void 0;\nconst methods_1 = require(\"../communication/methods\");\nclass TXs {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getBySafeTxHash(safeTxHash) {\n        if (!safeTxHash) {\n            throw new Error('Invalid safeTxHash');\n        }\n        const response = await this.communicator.send(methods_1.Methods.getTxBySafeTxHash, { safeTxHash });\n        return response.data;\n    }\n    async signMessage(message) {\n        const messagePayload = {\n            message,\n        };\n        const response = await this.communicator.send(methods_1.Methods.signMessage, messagePayload);\n        return response.data;\n    }\n    async send({ txs, params }) {\n        if (!txs || !txs.length) {\n            throw new Error('No transactions were passed');\n        }\n        const messagePayload = {\n            txs,\n            params,\n        };\n        const response = await this.communicator.send(methods_1.Methods.sendTransactions, messagePayload);\n        return response.data;\n    }\n}\nexports.TXs = TXs;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransferDirection = exports.TransactionStatus = exports.TokenType = exports.Operation = void 0;\nvar safe_react_gateway_sdk_1 = require(\"@gnosis.pm/safe-react-gateway-sdk\");\nObject.defineProperty(exports, \"Operation\", { enumerable: true, get: function () { return safe_react_gateway_sdk_1.Operation; } });\nObject.defineProperty(exports, \"TokenType\", { enumerable: true, get: function () { return safe_react_gateway_sdk_1.TokenType; } });\nObject.defineProperty(exports, \"TransactionStatus\", { enumerable: true, get: function () { return safe_react_gateway_sdk_1.TransactionStatus; } });\nObject.defineProperty(exports, \"TransferDirection\", { enumerable: true, get: function () { return safe_react_gateway_sdk_1.TransferDirection; } });\n//# sourceMappingURL=gateway.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./sdk\"), exports);\n__exportStar(require(\"./rpc\"), exports);\n__exportStar(require(\"./gateway\"), exports);\n__exportStar(require(\"./messaging\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst methods_1 = require(\"../communication/methods\");\n//# sourceMappingURL=messaging.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=rpc.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=sdk.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSDKVersion = void 0;\nconst package_json_1 = __importDefault(require(\"../package.json\"));\n// Slice is needed for versions like '1.0.0-beta.0'\nconst getSDKVersion = () => package_json_1.default.version.slice(0, 5);\nexports.getSDKVersion = getSDKVersion;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","export const version = \"bignumber/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        logger.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nexport function _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nexport function _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nexport function resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nexport function checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nexport function shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value = null;\n            try {\n                value = object[keys[i]];\n            }\n            catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n            if (!_isFrozen(value)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nexport function deepCopy(object) {\n    return _deepCopy(object);\n}\nexport class Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"properties/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"abi/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","\"use strict\";\nimport sha3 from \"js-sha3\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map","export const version = \"rlp/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { arrayify, hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    const data = Array.prototype.slice.call(arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nexport function encode(object) {\n    return hexlify(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\nexport function decode(data) {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n//# sourceMappingURL=index.js.map","export const version = \"address/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nexport function getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nexport function isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getIcapAddress(address) {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\nexport function getCreate2Address(from, salt, initCodeHash) {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=index.js.map","export const version = \"strings/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nexport var Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport function id(text) {\n    return keccak256(toUtf8Bytes(text));\n}\n//# sourceMappingURL=id.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","import { BigNumber } from \"@ethersproject/bignumber\";\nconst NegativeOne = ( /*#__PURE__*/BigNumber.from(-1));\nconst Zero = ( /*#__PURE__*/BigNumber.from(0));\nconst One = ( /*#__PURE__*/BigNumber.from(1));\nconst Two = ( /*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther = ( /*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256 = ( /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nconst MinInt256 = ( /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256 = ( /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256, MinInt256, MaxInt256, };\n//# sourceMappingURL=bignumbers.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) { }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-provider/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst allowedTransactionKeys = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n;\n;\nexport class Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transaction\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"sendTransaction\");\n            const tx = yield this.populateTransaction(transaction);\n            const signedTx = yield this.signTransaction(tx);\n            return yield this.provider.sendTransaction(signedTx);\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getFeeData\");\n            return yield this.provider.getFeeData();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n                // Prevent this error from causing an UnhandledPromiseException\n                tx.to.catch((error) => { });\n            }\n            // Do not allow mixing pre-eip-1559 and eip-1559 properties\n            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n            }\n            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n            }\n            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n            }\n            else if (tx.type === 0 || tx.type === 1) {\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                    tx.gasPrice = this.getGasPrice();\n                }\n            }\n            else {\n                // We need to get fee data to determine things\n                const feeData = yield this.getFeeData();\n                if (tx.type == null) {\n                    // We need to auto-detect the intended type of this transaction...\n                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        // The network supports EIP-1559!\n                        // Upgrade transaction from null to eip-1559\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            const gasPrice = tx.gasPrice;\n                            delete tx.gasPrice;\n                            tx.maxFeePerGas = gasPrice;\n                            tx.maxPriorityFeePerGas = gasPrice;\n                        }\n                        else {\n                            // Populate missing fee data\n                            if (tx.maxFeePerGas == null) {\n                                tx.maxFeePerGas = feeData.maxFeePerGas;\n                            }\n                            if (tx.maxPriorityFeePerGas == null) {\n                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                            }\n                        }\n                    }\n                    else if (feeData.gasPrice != null) {\n                        // Network doesn't support EIP-1559...\n                        // ...but they are trying to use EIP-1559 properties\n                        if (hasEip1559) {\n                            logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"populateTransaction\"\n                            });\n                        }\n                        // Populate missing fee data\n                        if (tx.gasPrice == null) {\n                            tx.gasPrice = feeData.gasPrice;\n                        }\n                        // Explicitly set untyped transaction to legacy\n                        tx.type = 0;\n                    }\n                    else {\n                        // getFeeData has failed us.\n                        logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"signer.getFeeData\"\n                        });\n                    }\n                }\n                else if (tx.type === 2) {\n                    // Explicitly using EIP-1559\n                    // Populate missing fee data\n                    if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                    }\n                    if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                    }\n                }\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nexport class VoidSigner extends Signer {\n    constructor(address, provider) {\n        logger.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-signer/5.6.0\";\n//# sourceMappingURL=_version.js.map","import BN from 'bn.js';\nimport hash from 'hash.js';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n\nfunction getAugmentedNamespace(n) {\n\tif (n.__esModule) return n;\n\tvar a = Object.defineProperty({}, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar utils_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n});\n\nvar utils_1$1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\n\n\n\nutils.assert = minimalisticAssert;\nutils.toArray = utils_1.toArray;\nutils.zero2 = utils_1.zero2;\nutils.toHex = utils_1.toHex;\nutils.encode = utils_1.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n});\n\n'use strict';\n\n\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert$1(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert$1(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert$1(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n});\n\n'use strict';\n\n\n\n\n\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits_browser(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits_browser(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits_browser(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curve = exports;\n\ncurve.base = base;\ncurve.short = short_1;\ncurve.mont = /*RicMoo:ethers:require(./mont)*/(null);\ncurve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);\n});\n\nvar curves_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curves = exports;\n\n\n\n\n\nvar assert = utils_1$1.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve_1.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve_1.edwards(options);\n  else\n    this.curve = new curve_1.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n});\n\n'use strict';\n\n\n\n\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n'use strict';\n\n\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n'use strict';\n\n\n\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n'use strict';\n\n\n\n\n\nvar rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nvar assert$5 = utils_1$1.assert;\n\n\n\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),\n      'Unknown curve ' + options);\n\n    options = curves_1[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves_1.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex');\n\n  // Perform primitive values validation\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature$1.r;\n  var s = signature$1.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null)\n    return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = /*RicMoo:ethers*/{ version: \"6.5.4\" }.version;\nelliptic.utils = utils_1$1;\nelliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nelliptic.curve = curve_1;\nelliptic.curves = curves_1;\n\n// Protocols\nelliptic.ec = ec;\nelliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);\n});\n\nvar EC$1 = elliptic_1.ec;\n\nexport { EC$1 as EC };\n//# sourceMappingURL=elliptic.js.map\n","export const version = \"signing-key/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { EC } from \"./elliptic\";\nimport { arrayify, hexlify, hexZeroPad, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nlet _curve = null;\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\nexport class SigningKey {\n    constructor(privateKey) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n    _addPoint(other) {\n        const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 = getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n    signDigest(digest) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        });\n    }\n    computeSharedSecret(otherKey) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n    static isSigningKey(value) {\n        return !!(value && value._isSigningKey);\n    }\n}\nexport function recoverPublicKey(digest, signature) {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\nexport function computePublicKey(key, compressed) {\n    const bytes = arrayify(key);\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n    }\n    else if (bytes.length === 33) {\n        if (compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n    }\n    else if (bytes.length === 65) {\n        if (!compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n//# sourceMappingURL=index.js.map","export const version = \"transactions/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport var TransactionTypes;\n(function (TransactionTypes) {\n    TransactionTypes[TransactionTypes[\"legacy\"] = 0] = \"legacy\";\n    TransactionTypes[TransactionTypes[\"eip2930\"] = 1] = \"eip2930\";\n    TransactionTypes[TransactionTypes[\"eip1559\"] = 2] = \"eip1559\";\n})(TransactionTypes || (TransactionTypes = {}));\n;\n///////////////////////////////\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return getAddress(value);\n}\nfunction handleNumber(value) {\n    if (value === \"0x\") {\n        return Zero;\n    }\n    return BigNumber.from(value);\n}\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\", maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\", length: 20 },\n    { name: \"value\", maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true\n};\nexport function computeAddress(key) {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\nexport function recoverAddress(digest, signature) {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\nfunction formatNumber(value, name) {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\nexport function accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n                }\n                return accessSetify(set[0], set[1]);\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction _serializeEip1559(transaction, signature) {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x02\", RLP.encode(fields)]);\n}\nfunction _serializeEip2930(transaction, signature) {\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x01\", RLP.encode(fields)]);\n}\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction, signature) {\n    checkProperties(transaction, allowedTransactionKeys);\n    const raw = [];\n    transactionFields.forEach(function (fieldInfo) {\n        let value = transaction[fieldInfo.name] || ([]);\n        const options = {};\n        if (fieldInfo.numeric) {\n            options.hexPad = \"left\";\n        }\n        value = arrayify(hexlify(value, options));\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n            }\n        }\n        raw.push(hexlify(value));\n    });\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n        if (typeof (chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n    }\n    else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam;\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n            logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    }\n    else if (sig.v !== v) {\n        logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n    return RLP.encode(raw);\n}\nexport function serialize(transaction, signature) {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n    return logger.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\nfunction _parseEipSignature(tx, fields, serialize) {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) {\n            throw new Error(\"bad recid\");\n        }\n        tx.v = recid;\n    }\n    catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\nfunction _parseEip1559(payload) {\n    const transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx = {\n        type: 2,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        maxFeePerGas: maxFeePerGas,\n        gasPrice: null,\n        gasLimit: handleNumber(transaction[4]),\n        to: handleAddress(transaction[5]),\n        value: handleNumber(transaction[6]),\n        data: transaction[7],\n        accessList: accessListify(transaction[8]),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n    return tx;\n}\nfunction _parseEip2930(payload) {\n    const transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n    const tx = {\n        type: 1,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        gasPrice: handleNumber(transaction[2]),\n        gasLimit: handleNumber(transaction[3]),\n        to: handleAddress(transaction[4]),\n        value: handleNumber(transaction[5]),\n        data: transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n    return tx;\n}\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction) {\n    const transaction = RLP.decode(rawTransaction);\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n    const tx = {\n        nonce: handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to: handleAddress(transaction[3]),\n        value: handleNumber(transaction[4]),\n        data: transaction[5],\n        chainId: 0\n    };\n    // Legacy unsigned transaction\n    if (transaction.length === 6) {\n        return tx;\n    }\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n    }\n    catch (error) {\n        console.log(error);\n        return tx;\n    }\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n    }\n    else {\n        // Signed Transaction\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) {\n            tx.chainId = 0;\n        }\n        let recoveryParam = tx.v - 27;\n        const raw = transaction.slice(0, 6);\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        }\n        catch (error) {\n            console.log(error);\n        }\n        tx.hash = keccak256(rawTransaction);\n    }\n    tx.type = null;\n    return tx;\n}\nexport function parse(rawTransaction) {\n    const payload = arrayify(rawTransaction);\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) {\n        return _parse(payload);\n    }\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n    return logger.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        if (typeof (name) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n        }\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                }));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Compute the intrinsic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        if (ro.customData) {\n            tx.customData = shallowCopy(ro.customData);\n        }\n        if (ro.ccipReadEnabled) {\n            tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n        }\n        // Remove the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        delete overrides.customData;\n        delete overrides.ccipReadEnabled;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction addContractWait(contract, tx) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations) => {\n        return wait(confirmations).then((receipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event = deepCopy(log);\n                let parsed = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                }\n                catch (e) { }\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data, topics) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n                // Useful operations\n                event.removeListener = () => { return contract.provider; };\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                };\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                };\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                };\n                return event;\n            });\n            return receipt;\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tx.wait so the receipt has extra properties\n            addContractWait(contract, tx);\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        logger.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${name}`]) {\n                    uniqueNames[`%${name}`] = [];\n                }\n                uniqueNames[`%${name}`].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            // Add the modified wait that wraps events\n            addContractWait(contract, tx);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"contracts/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","export const version = \"hash/5.6.0\";\n//# sourceMappingURL=_version.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nexport class BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexport { Base32, Base58 };\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map","export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const version = \"wordlists/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","export const version = \"hdnode/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"random/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","export const version = \"json-wallets/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","export const version = \"wallet/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                providerList.push(new providers.AnkrProvider(network, options.ankr));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n// See: https://chainlist.org\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    optimism: { chainId: 10, name: \"optimism\" },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map","export const version = \"networks/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\nexport function dnsEncode(name) {\n    return hexlify(concat(name.split(\".\").map((comp) => {\n        // We jam in an _ prefix to fill in with the length later\n        // Note: Nameprep throws if the component is over 63 bytes\n        const bytes = toUtf8Bytes(\"_\" + nameprep(comp));\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\n//# sourceMappingURL=namehash.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const errorPassThrough = ((typeof (connection) === \"object\") ? !!(connection.errorPassThrough) : false);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n    }\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData) : null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n            let result = response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    if (attempt < attemptLimit) {\n                        if (response.statusCode === 301 || response.statusCode === 302) {\n                            // Redirection; for now we only support absolute locataions\n                            const location = response.headers.location || \"\";\n                            if (options.method === \"GET\" && location.match(/^https:/)) {\n                                url = response.headers.location;\n                                continue;\n                            }\n                        }\n                        else if (response.statusCode === 429) {\n                            // Exponential back-off throttling\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                let stall = 0;\n                                const retryAfter = response.headers[\"retry-after\"];\n                                if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                    stall = parseInt(retryAfter) * 1000;\n                                }\n                                else {\n                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                }\n                                //console.log(\"Stalling 429\");\n                                yield staller(stall);\n                                continue;\n                            }\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it either returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map","export const version = \"web/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"providers/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class Formatter {\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: Formatter.allowNull(address),\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : BigNumber.from(difficulty));\n        return result;\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parseTransaction(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nexport function isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexport function isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\nconst MAX_CCIP_REDIRECTS = 10;\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport class Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result, start) {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result, start) {\n    if (result === \"0x\") {\n        return null;\n    }\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n    return `https:/\\/gateway.ipfs.io/ipfs/${link}`;\n}\nfunction numPad(value) {\n    const result = arrayify(value);\n    if (result.length > 32) {\n        throw new Error(\"internal; should not happen\");\n    }\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\nfunction bytesPad(value) {\n    if ((value.length % 32) === 0) {\n        return value;\n    }\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n    const result = [];\n    let byteCount = 0;\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return hexConcat(result);\n}\nexport class Resolver {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider, address, name, resolvedAddress) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    supportsWildcard() {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return false;\n                }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n        return this._supportsEip2544;\n    }\n    _fetch(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // e.g. keccak256(\"addr(bytes32,uint256)\")\n            const tx = {\n                to: this.address,\n                ccipReadEnabled: true,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            // Wildcard support; use EIP-2544 to resolve the request\n            let parseBytes = false;\n            if (yield this.supportsWildcard()) {\n                parseBytes = true;\n                // selector(\"resolve(bytes,bytes)\")\n                tx.data = hexConcat([\"0x9061b923\", encodeBytes([dnsEncode(this.name), tx.data])]);\n            }\n            try {\n                let result = yield this.provider.call(tx);\n                if ((arrayify(result).length % 32) === 4) {\n                    logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                        transaction: tx, data: result\n                    });\n                }\n                if (parseBytes) {\n                    result = _parseBytes(result, 0);\n                }\n                return result;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._fetch(selector, parameters);\n            if (result != null) {\n                return _parseBytes(result, 0);\n            }\n            return null;\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const result = yield this._fetch(\"0x3b3b57de\");\n                    // No address\n                    if (result === \"0x\" || result === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(result);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getAvatar() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const linkage = [{ type: \"name\", content: this.name }];\n            try {\n                // test data for ricmoo.eth\n                //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n                const avatar = yield this.getText(\"avatar\");\n                if (avatar == null) {\n                    return null;\n                }\n                for (let i = 0; i < matchers.length; i++) {\n                    const match = avatar.match(matchers[i]);\n                    if (match == null) {\n                        continue;\n                    }\n                    const scheme = match[1].toLowerCase();\n                    switch (scheme) {\n                        case \"https\":\n                            linkage.push({ type: \"url\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"data\":\n                            linkage.push({ type: \"data\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"ipfs\":\n                            linkage.push({ type: \"ipfs\", content: avatar });\n                            return { linkage, url: getIpfsLink(avatar) };\n                        case \"erc721\":\n                        case \"erc1155\": {\n                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                            const selector = (scheme === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                            linkage.push({ type: scheme, content: avatar });\n                            // The owner of this name\n                            const owner = (this._resolvedAddress || (yield this.getAddress()));\n                            const comps = (match[2] || \"\").split(\"/\");\n                            if (comps.length !== 2) {\n                                return null;\n                            }\n                            const addr = yield this.provider.formatter.address(comps[0]);\n                            const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n                            // Check that this account owns the token\n                            if (scheme === \"erc721\") {\n                                // ownerOf(uint256 tokenId)\n                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x6352211e\", tokenId])\n                                }));\n                                if (owner !== tokenOwner) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"owner\", content: tokenOwner });\n                            }\n                            else if (scheme === \"erc1155\") {\n                                // balanceOf(address owner, uint256 tokenId)\n                                const balance = BigNumber.from(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x00fdd58e\", hexZeroPad(owner, 32), tokenId])\n                                }));\n                                if (balance.isZero()) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"balance\", content: balance.toString() });\n                            }\n                            // Call the token contract for the metadata URL\n                            const tx = {\n                                to: this.provider.formatter.address(comps[0]),\n                                data: hexConcat([selector, tokenId])\n                            };\n                            let metadataUrl = _parseString(yield this.provider.call(tx), 0);\n                            if (metadataUrl == null) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n                            // ERC-1155 allows a generic {id} in the URL\n                            if (scheme === \"erc1155\") {\n                                metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                                linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                            }\n                            // Transform IPFS metadata links\n                            if (metadataUrl.match(/^ipfs:/i)) {\n                                metadataUrl = getIpfsLink(metadataUrl);\n                            }\n                            linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                            // Get the token metadata\n                            const metadata = yield fetchJson(metadataUrl);\n                            if (!metadata) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                            // Pull the image URL out\n                            let imageUrl = metadata.image;\n                            if (typeof (imageUrl) !== \"string\") {\n                                return null;\n                            }\n                            if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                                // Allow\n                            }\n                            else {\n                                // Transform IPFS link to gateway\n                                const ipfs = imageUrl.match(matcherIpfs);\n                                if (ipfs == null) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                                imageUrl = getIpfsLink(imageUrl);\n                            }\n                            linkage.push({ type: \"url\", content: imageUrl });\n                            return { linkage, url: imageUrl };\n                        }\n                    }\n                }\n            }\n            catch (error) { }\n            return null;\n        });\n    }\n    getContentHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // IPNS (CID: 1, Type: libp2p-key)\n            const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipns) {\n                const length = parseInt(ipns[3], 16);\n                if (ipns[4].length === length * 2) {\n                    return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nexport class BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.disableCcipRead = false;\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    ccipReadFetch(tx, calldata, urls) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.disableCcipRead || urls.length === 0) {\n                return null;\n            }\n            const sender = tx.to.toLowerCase();\n            const data = calldata.toLowerCase();\n            const errorMessages = [];\n            for (let i = 0; i < urls.length; i++) {\n                const url = urls[i];\n                // URL expansion\n                const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n                // If no {data} is present, use POST; otherwise GET\n                const json = (url.indexOf(\"{data}\") >= 0) ? null : JSON.stringify({ data, sender });\n                const result = yield fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                    value.status = response.statusCode;\n                    return value;\n                });\n                if (result.data) {\n                    return result.data;\n                }\n                const errorMessage = (result.message || \"unknown error\");\n                // 4xx indicates the result is not present; stop\n                if (result.status >= 400 && result.status < 500) {\n                    return logger.throwError(`response not found during CCIP fetch: ${errorMessage}`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n                }\n                // 5xx indicates server issue; try the next url\n                errorMessages.push(errorMessage);\n            }\n            return logger.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(\", \")}`, Logger.errors.SERVER_ERROR, {\n                urls, errorMessages\n            });\n        });\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        // We only allow a single getLogs to be in-flight at a time\n                        if (!event._inflight) {\n                            event._inflight = true;\n                            // Filter from the last known event; due to load-balancing\n                            // and some nodes returning updated block numbers before\n                            // indexing events, a logs result with 0 entries cannot be\n                            // trusted and we must retry a range which includes it again\n                            const filter = event.filter;\n                            filter.fromBlock = event._lastBlockNumber + 1;\n                            filter.toBlock = blockNumber;\n                            // Prevent fitler ranges from growing too wild\n                            if (filter.toBlock - this._maxFilterBlockRange > filter.fromBlock) {\n                                filter.fromBlock = filter.toBlock - this._maxFilterBlockRange;\n                            }\n                            const runner = this.getLogs(filter).then((logs) => {\n                                // Allow the next getLogs\n                                event._inflight = false;\n                                if (logs.length === 0) {\n                                    return;\n                                }\n                                logs.forEach((log) => {\n                                    // Only when we get an event for a given block number\n                                    // can we trust the events are indexed\n                                    if (log.blockNumber > event._lastBlockNumber) {\n                                        event._lastBlockNumber = log.blockNumber;\n                                    }\n                                    // Make sure we stall requests to fetch blocks and txs\n                                    this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                    this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                    this.emit(filter, log);\n                                });\n                            }).catch((error) => {\n                                this.emit(\"error\", error);\n                                // Allow another getLogs (the range was not updated)\n                                event._inflight = false;\n                            });\n                            runners.push(runner);\n                        }\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    _call(transaction, blockTag, attempt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (attempt >= MAX_CCIP_REDIRECTS) {\n                logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                    redirects: attempt, transaction\n                });\n            }\n            const txSender = transaction.to;\n            const result = yield this.perform(\"call\", { transaction, blockTag });\n            // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n            if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n                try {\n                    const data = hexDataSlice(result, 4);\n                    // Check the sender of the OffchainLookup matches the transaction\n                    const sender = hexDataSlice(data, 0, 32);\n                    if (!BigNumber.from(sender).eq(txSender)) {\n                        logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    // Read the URLs from the response\n                    const urls = [];\n                    const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                    const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                    const urlsData = hexDataSlice(data, urlsOffset + 32);\n                    for (let u = 0; u < urlsLength; u++) {\n                        const url = _parseString(urlsData, u * 32);\n                        if (url == null) {\n                            logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                                name: \"OffchainLookup\",\n                                signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                transaction, data: result\n                            });\n                        }\n                        urls.push(url);\n                    }\n                    // Get the CCIP calldata to forward\n                    const calldata = _parseBytes(data, 64);\n                    // Get the callbackSelector (bytes4)\n                    if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                        logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    const callbackSelector = hexDataSlice(data, 96, 100);\n                    // Get the extra data to send back to the contract as context\n                    const extraData = _parseBytes(data, 128);\n                    const ccipResult = yield this.ccipReadFetch(transaction, calldata, urls);\n                    if (ccipResult == null) {\n                        logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    const tx = {\n                        to: txSender,\n                        data: hexConcat([callbackSelector, encodeBytes([ccipResult, extraData])])\n                    };\n                    return this._call(tx, blockTag, attempt + 1);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.SERVER_ERROR) {\n                        throw error;\n                    }\n                }\n            }\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params: { transaction, blockTag }, result, error\n                });\n            }\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const resolved = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag),\n                ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n            });\n            return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1);\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            addressOrName = yield addressOrName;\n            if (typeof (addressOrName) !== \"string\") {\n                logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n            }\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let currentName = name;\n            while (true) {\n                if (currentName === \"\" || currentName === \".\") {\n                    return null;\n                }\n                // Optimization since the eth node cannot change and does\n                // not have a wildcar resolver\n                if (name !== \"eth\" && currentName === \"eth\") {\n                    return null;\n                }\n                // Check the current node for a resolver\n                const addr = yield this._getResolver(currentName, \"getResolver\");\n                // Found a resolver!\n                if (addr != null) {\n                    const resolver = new Resolver(this, addr, name);\n                    // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                    if (currentName !== name && !(yield resolver.supportsWildcard())) {\n                        return null;\n                    }\n                    return resolver;\n                }\n                // Get the parent node\n                currentName = currentName.split(\".\").slice(1).join(\".\");\n            }\n        });\n    }\n    _getResolver(name, operation) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (operation == null) {\n                operation = \"ENS\";\n            }\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation, network: network.name });\n            }\n            try {\n                // keccak256(\"resolver(bytes32)\")\n                const addrData = yield this.call({\n                    to: network.ensAddress,\n                    data: (\"0x0178b8bf\" + namehash(name).substring(2))\n                });\n                return this.formatter.callAddress(addrData);\n            }\n            catch (error) {\n                // ENS registry cannot throw errors on resolver(bytes32)\n            }\n            return null;\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddr = yield this._getResolver(node, \"lookupAddress\");\n            if (resolverAddr == null) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            const name = _parseString(yield this.call({\n                to: resolverAddr,\n                data: (\"0x691f3431\" + namehash(node).substring(2))\n            }), 0);\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    getAvatar(nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = null;\n            if (isHexString(nameOrAddress)) {\n                // Address; reverse lookup\n                const address = this.formatter.address(nameOrAddress);\n                const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n                const resolverAddress = yield this._getResolver(node, \"getAvatar\");\n                if (!resolverAddress) {\n                    return null;\n                }\n                // Try resolving the avatar against the addr.reverse resolver\n                resolver = new Resolver(this, resolverAddress, node);\n                try {\n                    const avatar = yield resolver.getAvatar();\n                    if (avatar) {\n                        return avatar.url;\n                    }\n                }\n                catch (error) {\n                    if (error.code !== Logger.errors.CALL_EXCEPTION) {\n                        throw error;\n                    }\n                }\n                // Try getting the name and performing forward lookup; allowing wildcards\n                try {\n                    // keccak(\"name(bytes32)\")\n                    const name = _parseString(yield this.call({\n                        to: resolverAddress,\n                        data: (\"0x691f3431\" + namehash(node).substring(2))\n                    }), 0);\n                    resolver = yield this.getResolver(name);\n                }\n                catch (error) {\n                    if (error.code !== Logger.errors.CALL_EXCEPTION) {\n                        throw error;\n                    }\n                    return null;\n                }\n            }\n            else {\n                // ENS name; forward lookup with wildcard\n                resolver = yield this.getResolver(nameOrAddress);\n                if (!resolver) {\n                    return null;\n                }\n            }\n            const avatar = yield resolver.getAvatar();\n            if (avatar == null) {\n                return null;\n            }\n            return avatar.url;\n        });\n    }\n    perform(method, params) {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction spelunk(value) {\n    if (value == null) {\n        return null;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\" && value.message.match(\"reverted\") && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key]);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value));\n        }\n        catch (error) { }\n    }\n    return null;\n}\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error);\n        if (result) {\n            return result.data;\n        }\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    // @TODO: Should we spelunk for message too?\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n//# sourceMappingURL=ws.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport class WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        if (typeof (url) === \"string\") {\n            super(url, network);\n        }\n        else {\n            super(\"_websocket\", network);\n        }\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        }\n        else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n        this.websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket() { return this._websocket; }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this.websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this.websocket.readyState === WebSocket.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this.websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this.websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this.websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic(new.target, \"getNetwork\")(network);\n        apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n        const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map","import { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\nfunction getHost(name) {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        if (apiKey == null) {\n            apiKey = defaultApiKey;\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n}\n//# sourceMappingURL=ankr-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nexport class FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        logger.checkNew(new.target, FallbackProvider);\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map","\"use strict\";\nconst IpcProvider = null;\nexport { IpcProvider };\n//# sourceMappingURL=ipc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map","import { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// Experimental\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        const inflightRequest = { request, resolve: null, reject: null };\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    }\n}\n//# sourceMappingURL=json-rpc-batch-provider.js.map","/* istanbul ignore file */\n\"use strict\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map","\"use strict\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// These are load-balancer-based application IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nexport class PocketProvider extends UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = getStatic(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map","\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map","\"use strict\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { BaseProvider, Resolver } from \"./base-provider\";\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\nexport { \n// Abstract Providers (or Abstract-ish)\nProvider, BaseProvider, Resolver, UrlJsonRpcProvider, \n///////////////////////\n// Concrete Providers\nFallbackProvider, AlchemyProvider, AlchemyWebSocketProvider, AnkrProvider, CloudflareProvider, EtherscanProvider, InfuraProvider, InfuraWebSocketProvider, JsonRpcProvider, JsonRpcBatchProvider, NodesmithProvider, PocketProvider, StaticJsonRpcProvider, Web3Provider, WebSocketProvider, IpcProvider, \n///////////////////////\n// Signer\nJsonRpcSigner, \n///////////////////////\n// Functions\ngetDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, \n///////////////////////\n// Objects\nFormatter };\n//# sourceMappingURL=index.js.map","export const version = \"solidity/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","export const version = \"units/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","export const version = \"ethers/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports['\"@gnosis.pm/safe-react-gateway-sdk\"']=e():t['\"@gnosis.pm/safe-react-gateway-sdk\"']=e()}(this,(function(){return(()=>{var t={98:function(t,e){var r=\"undefined\"!=typeof self?self:this,n=function(){function t(){this.fetch=!1,this.DOMException=r.DOMException}return t.prototype=r,new t}();!function(t){!function(e){var r=\"URLSearchParams\"in t,n=\"Symbol\"in t&&\"iterator\"in Symbol,o=\"FileReader\"in t&&\"Blob\"in t&&function(){try{return new Blob,!0}catch(t){return!1}}(),i=\"FormData\"in t,s=\"ArrayBuffer\"in t;if(s)var a=[\"[object Int8Array]\",\"[object Uint8Array]\",\"[object Uint8ClampedArray]\",\"[object Int16Array]\",\"[object Uint16Array]\",\"[object Int32Array]\",\"[object Uint32Array]\",\"[object Float32Array]\",\"[object Float64Array]\"],c=ArrayBuffer.isView||function(t){return t&&a.indexOf(Object.prototype.toString.call(t))>-1};function u(t){if(\"string\"!=typeof t&&(t=String(t)),/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(t))throw new TypeError(\"Invalid character in header field name\");return t.toLowerCase()}function f(t){return\"string\"!=typeof t&&(t=String(t)),t}function d(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return n&&(e[Symbol.iterator]=function(){return e}),e}function h(t){this.map={},t instanceof h?t.forEach((function(t,e){this.append(e,t)}),this):Array.isArray(t)?t.forEach((function(t){this.append(t[0],t[1])}),this):t&&Object.getOwnPropertyNames(t).forEach((function(e){this.append(e,t[e])}),this)}function p(t){if(t.bodyUsed)return Promise.reject(new TypeError(\"Already read\"));t.bodyUsed=!0}function l(t){return new Promise((function(e,r){t.onload=function(){e(t.result)},t.onerror=function(){r(t.error)}}))}function y(t){var e=new FileReader,r=l(e);return e.readAsArrayBuffer(t),r}function b(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function E(){return this.bodyUsed=!1,this._initBody=function(t){var e;this._bodyInit=t,t?\"string\"==typeof t?this._bodyText=t:o&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:i&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:r&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():s&&o&&(e=t)&&DataView.prototype.isPrototypeOf(e)?(this._bodyArrayBuffer=b(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):s&&(ArrayBuffer.prototype.isPrototypeOf(t)||c(t))?this._bodyArrayBuffer=b(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText=\"\",this.headers.get(\"content-type\")||(\"string\"==typeof t?this.headers.set(\"content-type\",\"text/plain;charset=UTF-8\"):this._bodyBlob&&this._bodyBlob.type?this.headers.set(\"content-type\",this._bodyBlob.type):r&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set(\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"))},o&&(this.blob=function(){var t=p(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error(\"could not read FormData body as blob\");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?p(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(y)}),this.text=function(){var t,e,r,n=p(this);if(n)return n;if(this._bodyBlob)return t=this._bodyBlob,r=l(e=new FileReader),e.readAsText(t),r;if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),r=new Array(e.length),n=0;n<e.length;n++)r[n]=String.fromCharCode(e[n]);return r.join(\"\")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error(\"could not read FormData body as text\");return Promise.resolve(this._bodyText)},i&&(this.formData=function(){return this.text().then(T)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(t,e){t=u(t),e=f(e);var r=this.map[t];this.map[t]=r?r+\", \"+e:e},h.prototype.delete=function(t){delete this.map[u(t)]},h.prototype.get=function(t){return t=u(t),this.has(t)?this.map[t]:null},h.prototype.has=function(t){return this.map.hasOwnProperty(u(t))},h.prototype.set=function(t,e){this.map[u(t)]=f(e)},h.prototype.forEach=function(t,e){for(var r in this.map)this.map.hasOwnProperty(r)&&t.call(e,this.map[r],r,this)},h.prototype.keys=function(){var t=[];return this.forEach((function(e,r){t.push(r)})),d(t)},h.prototype.values=function(){var t=[];return this.forEach((function(e){t.push(e)})),d(t)},h.prototype.entries=function(){var t=[];return this.forEach((function(e,r){t.push([r,e])})),d(t)},n&&(h.prototype[Symbol.iterator]=h.prototype.entries);var I=[\"DELETE\",\"GET\",\"HEAD\",\"OPTIONS\",\"POST\",\"PUT\"];function A(t,e){var r,n,o=(e=e||{}).body;if(t instanceof A){if(t.bodyUsed)throw new TypeError(\"Already read\");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new h(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,o||null==t._bodyInit||(o=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||\"same-origin\",!e.headers&&this.headers||(this.headers=new h(e.headers)),this.method=(n=(r=e.method||this.method||\"GET\").toUpperCase(),I.indexOf(n)>-1?n:r),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,(\"GET\"===this.method||\"HEAD\"===this.method)&&o)throw new TypeError(\"Body not allowed for GET or HEAD requests\");this._initBody(o)}function T(t){var e=new FormData;return t.trim().split(\"&\").forEach((function(t){if(t){var r=t.split(\"=\"),n=r.shift().replace(/\\+/g,\" \"),o=r.join(\"=\").replace(/\\+/g,\" \");e.append(decodeURIComponent(n),decodeURIComponent(o))}})),e}function v(t,e){e||(e={}),this.type=\"default\",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText=\"statusText\"in e?e.statusText:\"OK\",this.headers=new h(e.headers),this.url=e.url||\"\",this._initBody(t)}A.prototype.clone=function(){return new A(this,{body:this._bodyInit})},E.call(A.prototype),E.call(v.prototype),v.prototype.clone=function(){return new v(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},v.error=function(){var t=new v(null,{status:0,statusText:\"\"});return t.type=\"error\",t};var O=[301,302,303,307,308];v.redirect=function(t,e){if(-1===O.indexOf(e))throw new RangeError(\"Invalid status code\");return new v(null,{status:e,headers:{location:t}})},e.DOMException=t.DOMException;try{new e.DOMException}catch(t){e.DOMException=function(t,e){this.message=t,this.name=e;var r=Error(t);this.stack=r.stack},e.DOMException.prototype=Object.create(Error.prototype),e.DOMException.prototype.constructor=e.DOMException}function _(t,r){return new Promise((function(n,i){var s=new A(t,r);if(s.signal&&s.signal.aborted)return i(new e.DOMException(\"Aborted\",\"AbortError\"));var a=new XMLHttpRequest;function c(){a.abort()}a.onload=function(){var t,e,r={status:a.status,statusText:a.statusText,headers:(t=a.getAllResponseHeaders()||\"\",e=new h,t.replace(/\\r?\\n[\\t ]+/g,\" \").split(/\\r?\\n/).forEach((function(t){var r=t.split(\":\"),n=r.shift().trim();if(n){var o=r.join(\":\").trim();e.append(n,o)}})),e)};r.url=\"responseURL\"in a?a.responseURL:r.headers.get(\"X-Request-URL\");var o=\"response\"in a?a.response:a.responseText;n(new v(o,r))},a.onerror=function(){i(new TypeError(\"Network request failed\"))},a.ontimeout=function(){i(new TypeError(\"Network request failed\"))},a.onabort=function(){i(new e.DOMException(\"Aborted\",\"AbortError\"))},a.open(s.method,s.url,!0),\"include\"===s.credentials?a.withCredentials=!0:\"omit\"===s.credentials&&(a.withCredentials=!1),\"responseType\"in a&&o&&(a.responseType=\"blob\"),s.headers.forEach((function(t,e){a.setRequestHeader(e,t)})),s.signal&&(s.signal.addEventListener(\"abort\",c),a.onreadystatechange=function(){4===a.readyState&&s.signal.removeEventListener(\"abort\",c)}),a.send(void 0===s._bodyInit?null:s._bodyInit)}))}_.polyfill=!0,t.fetch||(t.fetch=_,t.Headers=h,t.Request=A,t.Response=v),e.Headers=h,e.Request=A,e.Response=v,e.fetch=_,Object.defineProperty(e,\"__esModule\",{value:!0})}({})}(n),n.fetch.ponyfill=!0,delete n.fetch.polyfill;var o=n;(e=o.fetch).default=o.fetch,e.fetch=o.fetch,e.Headers=o.Headers,e.Request=o.Request,e.Response=o.Response,t.exports=e}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={exports:{}};return t[n].call(i.exports,i,i.exports,r),i.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};return(()=>{\"use strict\";r.r(n),r.d(n,{FEATURES:()=>u,GAS_PRICE_TYPE:()=>c,Operation:()=>e,RPC_AUTHENTICATION:()=>a,SafeAppAccessPolicyTypes:()=>t,TokenType:()=>f,TransactionStatus:()=>o,TransactionTokenType:()=>s,TransferDirection:()=>i,getBalances:()=>b,getChainConfig:()=>w,getChainsConfig:()=>N,getCollectibles:()=>A,getDecodedData:()=>S,getFiatCurrencies:()=>E,getMasterCopies:()=>C,getOwnedSafes:()=>I,getSafeApps:()=>g,getSafeInfo:()=>y,getTransactionDetails:()=>O,getTransactionHistory:()=>T,getTransactionQueue:()=>v,postSafeGasEstimation:()=>_,proposeTransaction:()=>m});var t,e,o,i,s,a,c,u,f,d=r(98),h=r.n(d);function p(t,e){return r=this,n=void 0,i=function(){var r,n,o,i,s;return function(t,e){var r,n,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(r)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,n=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}(this,(function(a){switch(a.label){case 0:return null!=e&&(r={method:\"POST\",body:\"string\"==typeof e?e:JSON.stringify(e),headers:{\"Content-Type\":\"application/json\"}}),[4,h()(t,r)];case 1:return[4,(n=a.sent()).json()];case 2:if(o=a.sent(),!n.ok){i=\"\";try{i=(s=o).code+\": \"+s.message}catch(t){i=n.statusText}throw new Error(i)}return[2,o]}}))},new((o=void 0)||(o=Promise))((function(t,e){function s(t){try{c(i.next(t))}catch(t){e(t)}}function a(t){try{c(i.throw(t))}catch(t){e(t)}}function c(e){var r;e.done?t(e.value):(r=e.value,r instanceof o?r:new o((function(t){t(r)}))).then(s,a)}c((i=i.apply(r,n||[])).next())}));var r,n,o,i}function l(t,e,r,n){if(n)return p(n);var o=r;return p(\"\"+t+function(t,e){return e?Object.keys(e).reduce((function(t,r){return function(t,e,r){return t.replace(new RegExp(\"\\\\{\"+e+\"\\\\}\",\"g\"),r)}(t,r,String(e[r]))}),t):t}(e,null==o?void 0:o.path)+function(t){if(!t)return\"\";var e=new URLSearchParams;Object.keys(t).forEach((function(r){null!=t[r]&&e.append(r,String(t[r]))}));var r=e.toString();return r?\"?\"+r:\"\"}(null==o?void 0:o.query),null==o?void 0:o.body)}function y(t,e,r){return l(t,\"/v1/chains/{chainId}/safes/{address}\",{path:{chainId:e,address:r}})}function b(t,e,r,n,o){return void 0===n&&(n=\"usd\"),void 0===o&&(o={}),l(t,\"/v1/chains/{chainId}/safes/{address}/balances/{currency}\",{path:{chainId:e,address:r,currency:n},query:o})}function E(t){return l(t,\"/v1/balances/supported-fiat-codes\")}function I(t,e,r){return l(t,\"/v1/chains/{chainId}/owners/{address}/safes\",{path:{chainId:e,address:r}})}function A(t,e,r,n){return void 0===n&&(n={}),l(t,\"/v1/chains/{chainId}/safes/{address}/collectibles\",{path:{chainId:e,address:r},query:n})}function T(t,e,r,n){return l(t,\"/v1/chains/{chainId}/safes/{safe_address}/transactions/history\",{path:{chainId:e,safe_address:r},query:{}},n)}function v(t,e,r,n){return l(t,\"/v1/chains/{chainId}/safes/{safe_address}/transactions/queued\",{path:{chainId:e,safe_address:r},query:{}},n)}function O(t,e,r){return l(t,\"/v1/chains/{chainId}/transactions/{transactionId}\",{path:{chainId:e,transactionId:r}})}function _(t,e,r,n){return l(t,\"/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations\",{path:{chainId:e,safe_address:r},body:n})}function m(t,e,r,n){return l(t,\"/v1/chains/{chainId}/transactions/{safe_address}/propose\",{path:{chainId:e,safe_address:r},body:n})}function N(t,e){return l(t,\"/v1/chains\",{query:e})}function w(t,e){return l(t,\"/v1/chains/{chainId}\",{path:{chainId:e}})}function g(t,e,r){return void 0===r&&(r={}),l(t,\"/v1/chains/{chainId}/safe-apps\",{path:{chainId:e},query:r})}function C(t,e){return l(t,\"/v1/chains/{chainId}/about/master-copies\",{path:{chainId:e}})}function S(t,e,r){return l(t,\"/v1/chains/{chainId}/data-decoder\",{path:{chainId:e},body:{data:r}})}!function(t){t.NoRestrictions=\"NO_RESTRICTIONS\",t.DomainAllowlist=\"DOMAIN_ALLOWLIST\"}(t||(t={})),function(t){t[t.CALL=0]=\"CALL\",t[t.DELEGATE=1]=\"DELEGATE\"}(e||(e={})),function(t){t.AWAITING_CONFIRMATIONS=\"AWAITING_CONFIRMATIONS\",t.AWAITING_EXECUTION=\"AWAITING_EXECUTION\",t.CANCELLED=\"CANCELLED\",t.FAILED=\"FAILED\",t.SUCCESS=\"SUCCESS\",t.PENDING=\"PENDING\",t.WILL_BE_REPLACED=\"WILL_BE_REPLACED\"}(o||(o={})),function(t){t.INCOMING=\"INCOMING\",t.OUTGOING=\"OUTGOING\",t.UNKNOWN=\"UNKNOWN\"}(i||(i={})),function(t){t.ERC20=\"ERC20\",t.ERC721=\"ERC721\",t.NATIVE_COIN=\"NATIVE_COIN\"}(s||(s={})),function(t){t.API_KEY_PATH=\"API_KEY_PATH\",t.NO_AUTHENTICATION=\"NO_AUTHENTICATION\",t.UNKNOWN=\"UNKNOWN\"}(a||(a={})),function(t){t.ORACLE=\"ORACLE\",t.FIXED=\"FIXED\",t.UNKNOWN=\"UNKNOWN\"}(c||(c={})),function(t){t.ERC721=\"ERC721\",t.SAFE_APPS=\"SAFE_APPS\",t.CONTRACT_INTERACTION=\"CONTRACT_INTERACTION\",t.DOMAIN_LOOKUP=\"DOMAIN_LOOKUP\",t.SPENDING_LIMIT=\"SPENDING_LIMIT\",t.EIP1559=\"EIP1559\",t.SAFE_TX_GAS_OPTIONAL=\"SAFE_TX_GAS_OPTIONAL\"}(u||(u={})),function(t){t.ERC20=\"ERC20\",t.ERC721=\"ERC721\",t.NATIVE_TOKEN=\"NATIVE_TOKEN\"}(f||(f={}))})(),n})()}));\n//# sourceMappingURL=index.min.js.map"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__exportStar","exports","p","prototype","hasOwnProperty","call","value","messageFormatter_1","constructor","allowedOrigins","debugMode","callbacks","Map","isValidMessage","origin","data","source","emptyOrMalformed","sentFromParentEl","window","parent","allowedSDKVersion","version","parseInt","split","validOrigin","Array","isArray","find","regExp","test","logIncomingMessage","msg","console","info","onParentMessage","handleIncomingMessage","payload","id","cb","delete","send","method","params","request","MessageFormatter","makeRequest","Error","postMessage","Promise","resolve","reject","set","response","success","error","addEventListener","utils_1","utils_2","generateRequestId","env","sdkVersion","getSDKVersion","makeResponse","makeErrorResponse","Methods","dec2hex","dec","toString","padStart","len","arr","Uint8Array","crypto","getRandomValues","from","join","generateId","Date","getTime","RPC_CALLS","eth_call","eth_gasPrice","eth_getLogs","eth_getBalance","eth_getCode","eth_getBlockByHash","eth_getBlockByNumber","eth_getStorageAt","eth_getTransactionByHash","eth_getTransactionReceipt","eth_getTransactionCount","eth_estimateGas","Eth","constants_1","methods_1","inputFormatters","defaultBlockParam","arg","returnFullTxObjectParam","blockNumberToHex","Number","isInteger","communicator","buildRequest","formatters","getBalance","getCode","getStorageAt","getPastLogs","getBlockByHash","getBlockByNumber","getTransactionByHash","getTransactionReceipt","getTransactionCount","getGasPrice","getEstimateGas","transaction","args","async","forEach","formatter","i","rpcCall","__importDefault","mod","__esModule","sdk_1","default","Safe","ethers_1","signatures_1","getChainInfo","getSafeInfo","currency","getSafeBalances","messageHash","signature","safeInfo","getInfo","encodedIsValidSignatureCall","EIP_1271_INTERFACE","encodeFunctionData","to","safeAddress","slice","toLowerCase","MAGIC_VALUE","err","msgBytes","ethers","utils","arrayify","EIP_1271_BYTES_INTERFACE","MAGIC_VALUE_BYTES","calculateMessageHash","message","hashMessage","isMessageHashSigned","checks","check1271Signature","bind","check1271SignatureBytes","check","Interface","communication_1","txs_1","eth_1","safe_1","opts","whitelistedDomains","debug","eth","txs","TXs","safe","safeTxHash","getTxBySafeTxHash","messagePayload","signMessage","length","sendTransactions","TransferDirection","TransactionStatus","TokenType","Operation","safe_react_gateway_sdk_1","package_json_1","_permanentCensorErrors","_censorErrors","LogLevels","warning","off","_logLevel","_globalLogger","_normalizeError","missing","form","normalize","push","String","fromCharCode","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","writable","_log","logLevel","level","throwArgumentError","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","errors","UNKNOWN_ERROR","messageDetails","keys","key","hex","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","name","INVALID_ARGUMENT","argument","assert","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","static","censorship","permanent","globalLogger","logger","isHexable","addSlice","array","arguments","isBytesLike","isBytes","v","options","result","unshift","allowMissingPrefix","substring","toHexString","hexPad","concat","items","objects","map","item","reduce","accum","offset","object","stripZeros","start","zeroPad","match","HexCharacters","hexlify","Math","floor","hexDataLength","hexDataSlice","endOffset","hexConcat","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","r","s","_vs","recoveryParam","yParityAndS","compact","bytes","vs","recId","joinSignature","BN","_constructorGuard","MAX_SAFE","_warnedToStringRadix","BigNumber","constructorGuard","_hex","_isBigNumber","freeze","fromTwos","toBigNumber","toBN","toTwos","abs","add","other","sub","div","isZero","throwFault","mul","isNeg","umod","pow","and","isNegative","or","xor","mask","maskn","shl","shln","shr","shrn","eq","lt","lte","gt","gte","toNumber","toBigInt","BigInt","e","toJSON","type","toHex","anyValue","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","then","defineReadOnly","getStatic","ctor","getPrototypeOf","resolveProperties","promises","all","checkProperties","properties","shallowCopy","opaque","bigint","boolean","number","string","_isFrozen","isFrozen","_deepCopy","deepCopy","Description","checkResultErrors","checkErrors","path","childPath","Coder","localName","dynamic","_throwError","Writer","wordSize","_data","_dataLength","_padding","_writeData","appendWriter","writer","writeBytes","paddingOffset","_getValue","BUFFER_OVERRUN","writeValue","writeUpdatableValue","Reader","coerceFunc","allowLoose","_offset","consumed","coerce","_coerceFunc","_peekBytes","loose","alignedLength","ceil","subReader","readBytes","readValue","keccak256","arrayifyInteger","unarrayifyInteger","_encode","child","encode","_decodeChildren","childOffset","decoded","_decode","lengthLength","decode","getChecksumAddress","address","chars","expanded","charCodeAt","hashed","toUpperCase","ibanLookup","safeDigits","x","log10","LN10","ibanChecksum","c","block","checksum","getAddress","isAddress","getIcapAddress","base36","getContractAddress","nonce","getCreate2Address","salt","initCodeHash","UnicodeNormalizationForm","Utf8ErrorReason","ignoreFunc","output","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","Utf8ErrorFuncs","ignore","replace","OVERLONG","getUtf8CodePoints","onError","extraLength","overlongMask","res","j","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","str","current","c2","pair","escapeChar","_toEscapedUtf8String","codePoint","_toUtf8String","codePoints","toUtf8String","toUtf8CodePoints","text","AddressCoder","super","defaultValue","reader","AnonymousCoder","coder","pack","coders","values","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","index","dynamicOffset","updateFunc","baseOffset","func","unpack","baseReader","offsetReader","baseType","uniqueNames","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","BytesCoder","FixedBytesCoder","size","NullCoder","NegativeOne","Zero","One","Two","WeiPerEther","MaxUint256","MinInt256","MaxInt256","NumberCoder","signed","maxUintValue","bounds","StringCoder","TupleCoder","types","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","populate","FormatTypes","sighash","minimal","full","json","paramTypeArray","RegExp","ParamType","arrayLength","arrayChildren","fromObject","components","_isParamType","format","indexed","comp","parse","allowIndexed","fromString","isParamType","verifyType","node","param","originalParam","newNode","state","allowType","allowParams","allowName","allowArray","sibling","readArray","parseParamType","parseParams","allowIndex","trim","depth","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","ErrorFragment","anonymous","inputs","input","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","gas","comps","parseModifiers","constant","payable","stateMutability","verifyState","isConstructorFragment","parens","outputs","isFunctionFragment","returns","checkForbidden","fragment","sig","isErrorFragment","regexIdentifier","paramTypeBytes","paramTypeNumber","AbiCoder","_getCoder","component","_getWordSize","_getReader","_getWriter","getDefaultValue","defaultAbiCoder","LogDescription","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","wrapAccessError","property","wrap","fragments","abi","filter","bucket","deploy","functions","events","eventFragment","getFunction","nameOrSignatureOrSighash","getSighash","matching","f","getEvent","nameOrSignatureOrTopic","topichash","getEventTopic","getError","_","_decodeParams","_abiCoder","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","functionFragment","decodeFunctionResult","errorArgs","errorName","errorSignature","selector","builtin","encodeFunctionResult","encodeFilterTopics","topics","encodeTopic","pop","encodeEventLog","dataTypes","dataValues","decodeEventLog","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hash","parseTransaction","tx","parseLog","topic","parseError","hexData","errorFragment","_isInterface","ForkEvent","_isForkEvent","Provider","getFeeData","gasPrice","getBlock","catch","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","addListener","eventName","listener","on","removeListener","_isProvider","allowedTransactionKeys","forwardErrors","Signer","blockTag","_checkProvider","provider","estimateGas","checkTransaction","sendTransaction","populateTransaction","signedTx","signTransaction","getChainId","getNetwork","chainId","resolveName","hasEip1559","feeData","gasLimit","results","_isSigner","VoidSigner","_fail","_signTypedData","domain","connect","globalThis","g","self","createCommonjsModule","fn","basedir","module","require","base","commonjsRequire","minimalisticAssert","val","equal","l","zero2","word","toArray","enc","hi","lo","utils_1$1","getNAF","num","w","bits","naf","max","bitLength","fill","ws","clone","z","andln","isOdd","isubn","iushrn","getJSF","k1","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","obj","computer","parseBytes","intFromLE","assert$1","BaseCurve","conf","red","prime","zero","toRed","one","two","n","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","nafW","repr","a","jpoint","b","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","y","cmp","toJ","redNeg","ja","jb","tmp","decodePoint","byteLength","pointFromX","encodeCompressed","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","dbl","inherits_browser","superCtor","super_","configurable","TempCtor","assert$2","ShortCurve","tinv","redInvm","zeroA","fromRed","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","short_1","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","u","x1","y1","x2","y2","q","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","fromJSON","pre","endoMul","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","t","yyyy8","d","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","curve_1","short","mont","edwards","curves_1","curves","PresetCurve","defineCurve","crash","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonceEnc","pers","persEnc","_init","hmacDrbg","seed","_update","_hmac","kmac","update","digest","reseed","addEnc","generate","temp","assert$3","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","derive","sign","verify","assert$4","Signature","_importDER","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","rand","assert$5","EC","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","signature$1","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","EC$1","elliptic","eddsa","_curve","getCurve","SigningKey","privateKey","_addPoint","p0","publicKey","signDigest","digestBytes","computeSharedSecret","otherKey","otherKeyPair","computePublicKey","_isSigningKey","recoverPublicKey","rs","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","transactionFields","maxLength","numeric","computeAddress","recoverAddress","formatNumber","accessSetify","addr","storageKeys","storageKey","accessListify","sort","localeCompare","formatAccessList","_serializeEip1559","fields","accessList","_serializeEip2930","serialize","raw","fieldInfo","_serialize","transactionType","_parseEipSignature","recid","rawTransaction","_parse","_parseEip2930","_parseEip1559","customData","ccipReadEnabled","resolver","nameOrPromise","resolveAddresses","paramType","contract","overrides","signer","override","resolved","resolvedAddress","interface","ro","intrinsic","roValue","leftovers","addContractWait","wait","confirmations","receipt","logs","event","parsed","eventSignature","blockHash","getTransaction","transactionHash","buildCall","collapseSimple","signerOrProvider","deployTransaction","_deployed","buildDefault","txRequest","buildSend","getEventTag","RunningEvent","tag","_listeners","once","removeAllListeners","listeners","listenerCount","run","argsCopy","setTimeout","prepareEvent","getEmit","ErrorRunningEvent","FragmentRunningEvent","contractInterface","decodeError","WildcardRunningEvent","BaseContract","addressOrName","Contract","isSigner","isProvider","uniqueFilters","filters","uniqueSignatures","callStatic","buildPopulate","buildEstimate","signatures","isInterface","deployed","_deployedPromise","contractAddress","fallback","attach","isIndexed","_normalizeRunningEvent","runningEvent","_runningEvents","_getRunningEvent","_checkRunningEvents","emit","_wrappedEmits","_wrapEvent","_addEventListener","wrappedEmit","queryFilter","fromBlockOrBlockhash","toBlock","fromBlock","getLogs","ContractFactory","bytecode","bytecodeHex","getDeployTransaction","unsignedTx","getContract","compilerOutput","evm","getInterface","zeros","getMultiplier","decimals","formatFixed","multiplier","fraction","whole","parseFixed","wholeValue","fractionValue","wei","FixedFormat","width","_multiplier","FixedNumber","_value","_isFixedNumber","_checkFormat","addUnsafe","fromValue","subUnsafe","mulUnsafe","divUnsafe","hasFraction","ONE","toFormat","ceiling","round","factor","bump","BUMP","toUnsafeFloat","parseFloat","isBigNumber","isBigNumberish","fixedFormat","decimal","fromBytes","padding","hexTrue","hexFalse","domainFieldTypes","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","padOffset","hexPadRight","encodeType","TypedDataEncoder","links","parents","subtypes","field","primaryTypes","checkCircular","found","subtype","primaryType","st","_types","getEncoder","encoder","_encoderCache","_getEncoder","subEncoder","encodedType","encodeData","hashStruct","_visit","callback","visit","domainFields","EIP712Domain","hashDomain","ensCache","domainValues","domainTypes","typesWithDomain","BaseX","alphabet","charAt","_alphabetMap","digits","carry","_leader","TypeError","byte","reverse","Base58","SupportedAlgorithm","ripemd160","sha256","sha512","computeHmac","algorithm","pbkdf2","password","iterations","keylen","hashAlgorithm","hLen","DK","block1","T","U","destPos","Wordlist","locale","mnemonic","words","wordlist","getWord","getWordIndex","lang","loadWords","langEn","register","wordlists","en","N","MasterSecret","HardenedBit","getUpperMask","bytes32","base58check","getWordlist","defaultPath","HDNode","parentFingerprint","chainCode","mnemonicOrPath","compressedPublicKey","extendedKey","neuter","_derive","IL","IR","ki","Ki","srcMnemonic","phrase","fingerprint","derivePath","shift","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","mnemonicToSeed","NFKD","bit","entropyBits","checksumMask","indices","remainingBits","checksumBits","isValidMnemonic","getAccountPath","anyGlobal","getGlobal","msCrypto","randomBytes","buffer","looseArrayify","hexString","zpad","getPassword","NFKC","searchPath","currentChild","matchingChild","uuidV4","CrowdsaleAccount","isCrowdsaleAccount","_isCrowdsaleAccount","decrypt","ethaddr","encseed","iv","encryptedSeed","aesCbc","seedHex","isCrowdsaleWallet","isKeystoreWallet","getJsonWalletAddress","hasMnemonic","KeystoreAccount","isKeystoreAccount","_isKeystoreAccount","_getAccount","ciphertext","counter","_decrypt","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","fromMnemonic","pbkdf2Sync","passwordBytes","dkLen","prfFunc","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","prf","decryptJsonWallet","scrypt","decryptJsonWalletSync","Wallet","isSigningKey","_mnemonic","_signingKey","populated","encrypt","client","uuidRandom","uuid","derivedKey","macPrefix","mac","Crypto","cipher","cipherparams","kdfparams","dklen","now","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","extraEntropy","verifyMessage","verifyTypedData","AddressZero","HashZero","EtherSymbol","ethDefaultProvider","network","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","pocket","skip","CloudflareProvider","cloudflare","AnkrProvider","ankr","FallbackProvider","quorum","renetwork","etcDefaultProvider","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","standard","defaultProvider","createTable","createRangeTable","matchMap","ranges","range","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","nameprep","codes","codesTableB2","codepoint","_nameprepTableB2","Zeros","Partition","isValidName","namehash","partition","dnsEncode","textData","atob","btoa","getUrl","href","headers","body","skipFetchSetup","mode","cache","credentials","redirect","referrer","fetch","arrayBuffer","statusCode","status","statusMessage","statusText","staller","duration","bodyify","_fetchData","connection","processFunc","attemptLimit","throttleLimit","throttleCallback","throttleSlotInterval","errorPassThrough","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","reData","dataMatch","SERVER_ERROR","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","TIMEOUT","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","random","serverError","throttleRetry","race","fetchJson","updated","poll","interval","retryLimit","oncePoll","onceBlock","Formatter","formats","getDefaultFormats","bigNumber","allowNull","blockNumber","transactionIndex","uint256","creates","transactionRequest","receiptLog","arrayOf","logIndex","root","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","parentHash","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","filterLog","removed","allowFalsish","strict","callAddress","_block","author","_difficulty","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","checkTopic","serializeTopics","sorted","isForkEvent","PollableEvents","Event","_lastBlockNumber","_inflight","pollable","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","base58Encode","matcherIpfs","matchers","_parseString","_parseBytes","getIpfsLink","link","numPad","padded","bytesPad","encodeBytes","datas","byteCount","Resolver","supportsWildcard","_supportsEip2544","_fetch","parameters","_fetchBytes","_getAddress","coinType","hexBytes","coinInfo","getAvatar","linkage","content","avatar","getText","scheme","owner","_resolvedAddress","tokenId","tokenOwner","balance","metadataUrl","metadata","imageUrl","image","getContentHash","ipfs","ipns","swarm","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","ready","NETWORK_ERROR","ccipReadFetch","urls","sender","errorMessages","errorMessage","_getInternalBlockNumber","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","pollingInterval","previousBlockNumber","eventBlockNumber","runner","resetEventsBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","_getFastBlockNumber","getBlockNumber","waitForTransaction","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","mined","getBlockWithTransactions","ti","cancelled","replacement","_wrapTransaction","unref","_getBlockTag","position","expectedHash","returnedHash","confirms","signedTransaction","hexTx","_getTransactionRequest","_getFilter","_call","redirects","txSender","urlsOffset","urlsLength","urlsData","callbackSelector","ccipResult","_getBlock","blockHashOrBlockTag","includeTransactions","blockWithTxs","getEtherPrice","getResolver","currentName","_getResolver","addrData","lookupAddress","resolverAddr","nameOrAddress","resolverAddress","NOT_IMPLEMENTED","_startEvent","_stopEvent","stopped","eventTag","errorGas","spelunk","checkError","responseText","getResult","getLowerCase","JsonRpcSigner","addressOrIndex","connectUnchecked","UncheckedJsonRpcSigner","_address","_index","accounts","sendUncheckedTransaction","fromAddress","estimate","hexlifyTransaction","_legacySignMessage","unlock","networkOrReady","_nextId","_cache","_eventLoopCache","_uncachedDetectNetwork","getSigner","getUncheckedSigner","listAccounts","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","NextId","WebSocketProvider","_wsReady","websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_websocket","_detectNetwork","rid","_subscribe","subIdPromise","_subIds","subId","emitReceipt","destroy","readyState","onerror","close","StaticJsonRpcProvider","_super","UrlJsonRpcProvider","apiKey","defaultApiKey","AlchemyWebSocketProvider","host","getHost","projectSecret","getTransactionPostData","maxFeePerGs","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","getPostUrl","getPostData","apikey","post","procFunc","payloadStr","txhash","postData","topic0","blocks","ethusd","getHistory","endBlock","startblock","endblock","timeStamp","shuffled","checkNetworks","median","maxDelta","middle","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","getProcessFunc","configs","_highestBlockNumber","tally","normalizedTally","waitForSync","getRunner","currentBlockNumber","providerConfigs","configOrProvider","stallTimeout","priority","total","first","t0","inflightWeight","backend","waiting","errorCode","props","IpcProvider","defaultProjectId","InfuraWebSocketProvider","projectId","apiKeyObj","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","NodesmithProvider","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","Web3Provider","jsonRpcFetchFunc","subprovider","isMetaMask","buildEip1193Fetcher","sendAsync","getDefaultProvider","regexBytes","regexNumber","regexArray","_pack","tight","formatBytes32String","parseBytes32String","names","commify","suffix","formatted","formatUnits","unitName","parseUnits","formatEther","parseEther","ether","_ethers","DOMException","Symbol","Blob","ArrayBuffer","isView","iterator","append","getOwnPropertyNames","bodyUsed","onload","FileReader","readAsArrayBuffer","E","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","blob","readAsText","formData","has","entries","A","signal","decodeURIComponent","ok","O","RangeError","stack","aborted","XMLHttpRequest","abort","getAllResponseHeaders","responseURL","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","removeEventListener","polyfill","Headers","Request","Response","ponyfill","toStringTag","FEATURES","GAS_PRICE_TYPE","RPC_AUTHENTICATION","SafeAppAccessPolicyTypes","TransactionTokenType","getBalances","getChainConfig","getChainsConfig","getCollectibles","getDecodedData","S","getFiatCurrencies","getMasterCopies","C","getOwnedSafes","getSafeApps","getTransactionDetails","getTransactionHistory","getTransactionQueue","postSafeGasEstimation","proposeTransaction","label","sent","trys","ops","throw","return","safe_address","transactionId","NoRestrictions","DomainAllowlist","CALL","DELEGATE","AWAITING_CONFIRMATIONS","AWAITING_EXECUTION","CANCELLED","FAILED","SUCCESS","PENDING","WILL_BE_REPLACED","INCOMING","OUTGOING","UNKNOWN","ERC20","ERC721","NATIVE_COIN","API_KEY_PATH","NO_AUTHENTICATION","ORACLE","FIXED","SAFE_APPS","CONTRACT_INTERACTION","DOMAIN_LOOKUP","SPENDING_LIMIT","EIP1559","SAFE_TX_GAS_OPTIONAL","NATIVE_TOKEN"],"sourceRoot":""}